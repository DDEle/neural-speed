#!/bin/bash

STYLE=$(git config --get hooks.clangformat.style)
MY_ROOT=$(git rev-parse --show-toplevel)

if [ -n "${STYLE}" ] ; then

  STYLEARG="-style=${STYLE}"

else

  STYLEARG="-style=file:${MY_ROOT}/tools/clang-format/_clang-format"

fi


format_files=()
while IFS= read -r -d $'\0'; do
  format_files+=("$REPLY")
done < <(find "$MY_ROOT" -name ".clang-format" -print0)


format_file() {

  file="${1}"

  # respect .clang-format files in subfolders
  local this_style="${STYLEARG}"
  for format in $format_files; do
    echo $format
    format_dir=$(dirname $(realpath "$format"))
    file_dir=$(dirname $(realpath "$file"))
    if [[ $file_dir = $format_dir* ]]; then
      this_style="-style=file"
      break
    fi
  done

  if [ -f $file ]; then

    clang-format-14 -i ${style} ${1}

    git add ${1}

  fi

}


case "${1}" in

  --about )

    echo "Runs clang-format on source files"

    ;;

  * )

    echo "Found .clang-format files: ${format_files[*]}"
    for file in `git diff-index --cached --name-only HEAD` ; do
      if [[ "$file" =~ (level_zero/.*)$ ]]
      then
        echo "[pre-commit hook] Skip clang-format on " "${file}"
      elif [[ "$file" =~ (\.cpp|\.hpp|\.h)$ ]]
      then
        echo "[pre-commit hook] Run clang-format on " "${file}"
        format_file "${file}"
      fi
    done

    ;;

esac
